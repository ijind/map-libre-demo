package ai.txai.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ai.txai.database.common.KeyValue;
import ai.txai.database.order.Order;
import ai.txai.database.site.Site;
import ai.txai.database.user.User;
import ai.txai.database.vehicle.Vehicle;
import ai.txai.database.vehicle.VehicleModel;

import ai.txai.greendao.KeyValueDao;
import ai.txai.greendao.OrderDao;
import ai.txai.greendao.SiteDao;
import ai.txai.greendao.UserDao;
import ai.txai.greendao.VehicleDao;
import ai.txai.greendao.VehicleModelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig keyValueDaoConfig;
    private final DaoConfig orderDaoConfig;
    private final DaoConfig siteDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig vehicleDaoConfig;
    private final DaoConfig vehicleModelDaoConfig;

    private final KeyValueDao keyValueDao;
    private final OrderDao orderDao;
    private final SiteDao siteDao;
    private final UserDao userDao;
    private final VehicleDao vehicleDao;
    private final VehicleModelDao vehicleModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        keyValueDaoConfig = daoConfigMap.get(KeyValueDao.class).clone();
        keyValueDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        siteDaoConfig = daoConfigMap.get(SiteDao.class).clone();
        siteDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        vehicleDaoConfig = daoConfigMap.get(VehicleDao.class).clone();
        vehicleDaoConfig.initIdentityScope(type);

        vehicleModelDaoConfig = daoConfigMap.get(VehicleModelDao.class).clone();
        vehicleModelDaoConfig.initIdentityScope(type);

        keyValueDao = new KeyValueDao(keyValueDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);
        siteDao = new SiteDao(siteDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        vehicleDao = new VehicleDao(vehicleDaoConfig, this);
        vehicleModelDao = new VehicleModelDao(vehicleModelDaoConfig, this);

        registerDao(KeyValue.class, keyValueDao);
        registerDao(Order.class, orderDao);
        registerDao(Site.class, siteDao);
        registerDao(User.class, userDao);
        registerDao(Vehicle.class, vehicleDao);
        registerDao(VehicleModel.class, vehicleModelDao);
    }
    
    public void clear() {
        keyValueDaoConfig.clearIdentityScope();
        orderDaoConfig.clearIdentityScope();
        siteDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        vehicleDaoConfig.clearIdentityScope();
        vehicleModelDaoConfig.clearIdentityScope();
    }

    public KeyValueDao getKeyValueDao() {
        return keyValueDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public SiteDao getSiteDao() {
        return siteDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public VehicleDao getVehicleDao() {
        return vehicleDao;
    }

    public VehicleModelDao getVehicleModelDao() {
        return vehicleModelDao;
    }

}
